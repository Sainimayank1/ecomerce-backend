<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Cart Page</title>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Quicksand:wght@500&display=swap" rel="stylesheet">
  <style>
    body {
      font-family: 'Quicksand', sans-serif;
      width: 100vw;
      min-height: 100vh;
      margin: 0;
      padding: 0;
      position: relative;
    }

    .card {
      display: flex;
      align-items: center;
      justify-content: center;
      flex-wrap: wrap;
      flex-direction: row;
    }

    .cart-items {
      margin: 55px 0px !important;
    }

    .perElement {
      width: 30%;
      min-height: 20rem;
      margin: 10px 3px;
      display: flex;
      align-items: center;
      justify-content: center;
      flex-direction: column;
      padding: 3px 10px;
      box-shadow: 1px 2px 7px grey;
    }


    .mainDiv {
      display: flex;
      padding: 1rem;
      flex-direction: column;
    }

    .firstDiv {
      width: 100%;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .firstDiv>img {
      width: 40%;
      object-fit: cover;
    }

    .secondDiv {
      width: 100%;
      display: flex;
      align-items: flex-start;
      height: 100%;
      flex-direction: column;
    }

    .secondDiv>p {
      font-weight: 600;
      font-weight: 1rem;
    }

    .btnDiv {
      width: 100%;
      display: flex;
      align-items: center;
      justify-content: space-between;
      margin-top: 1rem;
    }

    .btnDiv>button {
      width: 50%;
      border: none;
      outline: none;
      padding: 0.6rem;
      cursor: pointer;
    }

    .btnDiv>:nth-child(1) {
      background: #333;
      color: white;
    }

    .quantDiv {
      display: flex;
      align-items: center;
      flex-direction: row;
      justify-content: space-between;
      /* background: #000; */
      width: 100%;
    }

    .quantDiv button {
      border: none;
      outline: none;
      padding: 0.5rem 1rem;
      color: white;
      background: #17A2B8;
      margin: 0 0.5rem;
      cursor: pointer;
    }

    footer {
      background-color: #f1f1f1;
      text-align: center;
      position: absolute;
      bottom: -50px;
      width: 100%;
      box-shadow: 0 -2px 4px rgba(0, 0, 0, 0.1);
    }

    @media screen and (max-width:600px) {
      .perElement {
        width: 50% !important;
      }
    }

    @media screen and (max-width:500px) {
      .perElement {
        width: 80% !important;
      }
    }
    }
  </style>
</head>

<body>
  <%- include("header",{username:username , isAdmin:isAdmin}) %>
    <section class="cart-items" id="card-section">
      <div id="card" class="card"></div>
    </section>
    <footer>
      <p id="totalPtag"></p>
    </footer>

    <script>

      async function increaseQuant(element) {
        let response = await fetch("https://ecomerce-5it2.onrender.com/cartGetProduct", {
          method: "POST",
          mode: "cors",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ data: element.item._id }),
        });

        if (response.status == 200)
          response = await response.json();


        const data = JSON.parse(localStorage.getItem("cart"));
        let newData = data.map((item) => {
          if (item.item._id === element.item._id && response.msg.quantity >= item.quantity + 1) {
            item.quantity = item.quantity + 1;
          }

          return item;
        })

        localStorage.setItem("cart", JSON.stringify(newData));
        getitem();
      }

      async function decreaseQuant(element) {
        const data = JSON.parse(localStorage.getItem("cart"));
        let newData = data.map((item) => {
          if (item.quantity > 1 && item.item._id === element.item._id) {
            item.quantity = item.quantity - 1;
          }

          return item;

        })

        localStorage.setItem("cart", JSON.stringify(newData));
        getitem();
      }

      async function deleteElement(element) {
        const data = JSON.parse(localStorage.getItem("cart"));
        localStorage.removeItem("cart");
        let newData = data.filter((item) => {
          if (item.item._id !== element.item._id)
            return item;

        })
        localStorage.setItem("cart", JSON.stringify(newData));
        getitem();
      }

      async function getitem() {

        let totalPrice = 0;
        const data = JSON.parse(localStorage.getItem("cart"));
        const card = document.getElementById("card")
        const totalPtag = document.getElementById("totalPtag");
        card.textContent = "";
        data.forEach((element) => {
          const newcardelement = document.createElement("div");
          newcardelement.classList.add("perElement");

          //      Creating elements
          const pTag = document.createElement("p");
          const sTag = document.createElement("span");
          const button = document.createElement("button");
          const cartBtn = document.createElement("button")
          const btnDiv = document.createElement("div")
          const mainDiv = document.createElement("div");
          const firstDiv = document.createElement("div");
          const secondDiv = document.createElement("div");
          const image = document.createElement("img")
          const quantDiv = document.createElement("div");
          const quantBtnDiv = document.createElement("div");
          const quantPtag = document.createElement("p");
          const quantNeg = document.createElement("button");
          const quantPos = document.createElement("button");

          //  Giving properties
          mainDiv.classList.add("mainDiv")
          firstDiv.classList.add('firstDiv')
          secondDiv.classList.add('secondDiv');
          btnDiv.classList.add("btnDiv")
          quantDiv.classList.add("quantDiv")
          image.src = element.item.image;
          pTag.innerText = element.item.title
          sTag.innerText = "Price: " + element.item.price
          quantPtag.innerText = "Quantity: " + element.quantity
          quantNeg.innerText = "-";
          quantPos.innerText = "+";
          button.innerText = "View Desc"
          cartBtn.innerText = "Delete"
          totalPrice = totalPrice + (parseInt(element.item.price) * element.quantity)

          //  Appending childs
          firstDiv.appendChild(image);
          secondDiv.appendChild(pTag);
          secondDiv.appendChild(sTag);
          btnDiv.appendChild(button);
          btnDiv.appendChild(cartBtn);
          quantDiv.appendChild(quantPtag);
          quantBtnDiv.appendChild(quantNeg);
          quantBtnDiv.appendChild(quantPos);
          quantDiv.appendChild(quantBtnDiv);
          secondDiv.appendChild(quantDiv);
          secondDiv.appendChild(btnDiv);

          // Add description Div
          button.addEventListener('click', () => {
            newcardelement.textContent = "";
            const descDiv = document.createElement("div");
            descDiv.innerText = element.item.description;
            descDiv.style.margin = "1rem 0"
            descDiv.style.fontSize = "1rem"
            descDiv.style.color = "grey"
            newcardelement.appendChild(mainDiv);
            newcardelement.appendChild(descDiv)
          })

          cartBtn.addEventListener("click", () => { deleteElement(element) })
          quantNeg.addEventListener("click", () => { decreaseQuant(element) })
          quantPos.addEventListener("click", () => { increaseQuant(element) })

          cartBtn.addEventListener("click", () => { addToCart(element) })

          mainDiv.appendChild(firstDiv);
          mainDiv.appendChild(secondDiv);
          newcardelement.appendChild(mainDiv);
          card.appendChild(newcardelement);
        });

        totalPtag.innerText = "Total: " + totalPrice + "$";

      }

      getitem();

    </script>
</body>

</html>